{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vrotaru\\\\OneDrive - MasterControl\\\\Desktop\\\\First-React-App\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // When a Square is clicked, the onClick function provided by the Board is called. Here’s a review of how this is achieved:\n// 1. The onClick prop on the built-in DOM <button> component tells React to set up a click event listener.\n// 2. When the button is clicked, React will call the onClick event handler that is defined in Square’s render() method.\n// 3. This event handler calls this.props.onClick(). The Square’s onClick prop was specified by the Board.\n// 4. Since the Board passed onClick={() => this.handleClick(i)} to Square, the Square calls this.handleClick(i) when clicked.\n// 5. We have not defined the handleClick() method yet, so our code crashes. If you click a square now, you should see a red error screen saying something like “this.handleClick is not a function”.\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, props.value);\n} // To collect data from multiple children, or to have two child components communicate \n// with each other, you need to declare the shared state in their parent component instead.\n//  The parent component can pass the state back down to the children by using props;\n//  this keeps the child components in sync with each other and with the parent component.\n\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  } // Square components are now controlled components. The Board has full control over them.\n\n\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }\n    });\n  }\n\n  render() {\n    const winner = calculateWinner(this.state, squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, status), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/vrotaru/OneDrive - MasterControl/Desktop/First-React-App/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","constructor","state","squares","Array","fill","xIsNext","handleClick","i","slice","setState","renderSquare","render","winner","calculateWinner","status","Game","lines","length","a","b","c","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\n\r\n// When a Square is clicked, the onClick function provided by the Board is called. Here’s a review of how this is achieved:\r\n\r\n// 1. The onClick prop on the built-in DOM <button> component tells React to set up a click event listener.\r\n// 2. When the button is clicked, React will call the onClick event handler that is defined in Square’s render() method.\r\n// 3. This event handler calls this.props.onClick(). The Square’s onClick prop was specified by the Board.\r\n// 4. Since the Board passed onClick={() => this.handleClick(i)} to Square, the Square calls this.handleClick(i) when clicked.\r\n// 5. We have not defined the handleClick() method yet, so our code crashes. If you click a square now, you should see a red error screen saying something like “this.handleClick is not a function”.\r\nfunction Square(props) {\r\n    return(\r\n        <button className=\"square\" onClick={props.onClick}> \r\n            {props.value}\r\n        </button> \r\n    );\r\n}\r\n// To collect data from multiple children, or to have two child components communicate \r\n// with each other, you need to declare the shared state in their parent component instead.\r\n//  The parent component can pass the state back down to the children by using props;\r\n//  this keeps the child components in sync with each other and with the parent component.\r\nclass Board extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            xIsNext: true,\r\n        };\r\n    }\r\n    handleClick(i){\r\n        const squares = this.state.squares.slice();\r\n        squares[i] = this.state.xIsNext? 'X':'O';\r\n        this.setState({\r\n            squares: squares,\r\n            xIsNext: !this.state.xIsNext,\r\n        })\r\n    }\r\n    // Square components are now controlled components. The Board has full control over them.\r\n    renderSquare(i) {\r\n        return <Square value={this.state.squares[i]} onClick={() => this.handleClick(i)}/>;\r\n      }\r\n    \r\n\r\n    render(){\r\n        const winner = calculateWinner(this.state,squares);\r\n        let status;\r\n        if(winner){\r\n            status = 'Winner: '+winner;\r\n        }else{\r\n            status = 'Next player: '+ (this.state.xIsNext? 'X':'O');\r\n        }\r\n\r\n        \r\n        return(\r\n            <div>\r\n                <div className=\"status\">{status}</div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component{\r\n    render() {\r\n        return(\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board/>\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{/* status*/}</div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares){\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n      ];\r\n    for (let i = 0; i< lines.length; i++){\r\n        const [a, b, c] = lines[i];\r\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nReactDOM.render(\r\n    <Game />, document.getElementById('root')\r\n);"]},"metadata":{},"sourceType":"module"}