{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vrotaru\\\\OneDrive - MasterControl\\\\Desktop\\\\FullStack development corse\\\\First React App\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Square extends React.Component {\n  // we want the Square component to “remember” that it got clicked, \n  //and fill it with an “X” mark.\n  //  To “remember” things, components use state.\n  // React components can have state by setting this.state in their constructors. \n  // this.state should be considered as private to a React component that it’s defined in. Let’s store the current value of the Square in this.state, \n  // and change it when the Square is clicked.\n  // constructor(props){\n  //     super(props);\n  //     this.state = {\n  //         value: null,\n  //     };\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"square\",\n      onClick: () => this.setState({\n        value: 'X'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, this.state.value);\n  }\n\n} // To collect data from multiple children, or to have two child components communicate \n// with each other, you need to declare the shared state in their parent component instead.\n//  The parent component can pass the state back down to the children by using props;\n//  this keeps the child components in sync with each other and with the parent component.\n\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null)\n    };\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    });\n  }\n\n  render() {\n    const status = 'Next player: X';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, status), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/vrotaru/OneDrive - MasterControl/Desktop/FullStack development corse/First React App/my-app/src/index.js"],"names":["React","ReactDOM","Square","Component","render","setState","value","state","Board","constructor","props","squares","Array","fill","renderSquare","i","status","Game","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAoC;AAChC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,MAAM,GAAE;AACJ,wBACA;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAE,MAAM,KAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAd,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwE,KAAKC,KAAL,CAAWD,KAAnF,CADA;AAGH;;AAlB+B,C,CAoBpC;AACA;AACA;AACA;;;AACA,MAAME,KAAN,SAAoBR,KAAK,CAACG,SAA1B,CAAmC;AAC/BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKH,KAAL,GAAa;AACTI,MAAAA,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADA,KAAb;AAGH;;AACDC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZ,wBAAO,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAGHX,EAAAA,MAAM,GAAE;AACJ,UAAMY,MAAM,GAAG,gBAAf;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBA,MAAzB,CADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAFJ,eAOI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKA,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAPJ,eAYI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKA,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAZJ,CADJ;AAoBH;;AAlC8B;;AAqCnC,MAAMG,IAAN,SAAmBjB,KAAK,CAACG,SAAzB,CAAkC;AAC9BC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAJJ,CADJ;AAWH;;AAb6B;;AAgBlCH,QAAQ,CAACG,MAAT,eACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EACcc,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADd","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass Square extends React.Component{\r\n    // we want the Square component to “remember” that it got clicked, \r\n    //and fill it with an “X” mark.\r\n    //  To “remember” things, components use state.\r\n\r\n    // React components can have state by setting this.state in their constructors. \r\n    // this.state should be considered as private to a React component that it’s defined in. Let’s store the current value of the Square in this.state, \r\n    // and change it when the Square is clicked.\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         value: null,\r\n    //     };\r\n    // }\r\n    render(){\r\n        return(\r\n        <button className=\"square\" onClick={() => this.setState({value: 'X'})}>{this.state.value}</button>\r\n        );\r\n    }\r\n}\r\n// To collect data from multiple children, or to have two child components communicate \r\n// with each other, you need to declare the shared state in their parent component instead.\r\n//  The parent component can pass the state back down to the children by using props;\r\n//  this keeps the child components in sync with each other and with the parent component.\r\nclass Board extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null)\r\n        };\r\n    }\r\n    renderSquare(i) {\r\n        return <Square value={i}/>;\r\n      }\r\n    \r\n\r\n    render(){\r\n        const status = 'Next player: X';\r\n        return(\r\n            <div>\r\n                <div className=\"status\">{status}</div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component{\r\n    render() {\r\n        return(\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board/>\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{/* status*/}</div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Game />, document.getElementById('root')\r\n);"]},"metadata":{},"sourceType":"module"}